As part of this sprint, I was responsible for managing the foundational structure of the application, focusing on user authentication and main page setup. My primary contributions revolved around the development and structuring of key HTML files—`index.html`, `login.html`, `signup.html`, and `logout.html`. These pages were carefully crafted to provide a user-friendly interface, ensuring smooth navigation and a cohesive user experience. I prioritized accessibility and responsiveness, making the application intuitive and visually appealing.

To complement the HTML structure, I worked on the corresponding JavaScript files—`login.js`, `logout.js`, and `main.js`. These scripts were essential for implementing dynamic functionality, such as handling form validation, user authentication processes, and page transitions. Integrating asynchronous operations, including API calls and event handling, was a significant aspect of this work, ensuring seamless interactions across the platform. Debugging and optimizing these scripts played a critical role in maintaining both performance and reliability.

One of the challenges I encountered was ensuring seamless coordination between the front-end and back-end, particularly during the login and signup processes. Managing authentication tokens securely while maintaining session consistency required extensive troubleshooting and collaboration with the back-end team. Additionally, aligning the design and functionality of the main page (`index.html`) with the application's overall goals demanded iterative adjustments based on feedback and testing.

Reflecting on this sprint, I gained valuable insights into front-end development, particularly in creating responsive layouts and writing JavaScript code that bridges the front-end and back-end. I also honed my skills in troubleshooting asynchronous operations and implementing secure authentication flows. Looking back, I recognize that more detailed initial wireframing could have minimized the need for later adjustments, and earlier collaboration with the back-end team would have streamlined integration.
